@model BankID.WebDemo.Models.PersonalNumberModel

@{
    ViewBag.Title = "Authenticate";
}

<h2>Mobile BankID authentication</h2>

<form id="authenticationForm">
    <div class="form-group">
        @Html.LabelFor(model => model.PersonalNumber, "Personal number")
        @Html.EditorFor(model => model.PersonalNumber, new { htmlAttributes = new { id = "personalNumber", placeholder = "YYYYMMDDXXXX", @type = "password", @class = "form-control col-md-3" } })
        @Html.ValidationMessageFor(model => model.PersonalNumber, "", new { @class = "text-danger" })
    </div>
    
    <button type="submit" class="btn btn-primary">Authenticate</button>
</form>

<div class="col-md-3 text-center" id="authenticationInfo">
    <div class="spinner-border text-primary text-center" role="status" id="spinner">
        <span class="sr-only">Loading...</span>
    </div>
    <p id="status"></p>
    <a href="#" onclick="reset(); return false;">Reset</a> <!-- return false to avoid page refresh -->
</div>

<script>
    var statusLoop = null;
    var orderRef = null;

    var isAutomaticStart = isMobile() && isApple(); // some android phones have trouble auto-launching, only launch on Apple

    reset();

    if (isAutomaticStart) {
        authenticate();
    }

    function authenticate() {
        $("#authenticationForm").hide();
        $("#authenticationInfo").show();
        $("#spinner").show();

        var json = {
            endUserIp: null, // obtained by the API in backend
            personalNumber: $("#personalNumber").val(),
            requirement: null
        };

        console.log(json);

        $.ajax({
            url: '/api/bankid/authenticate',
            method: 'POST',
            dataType: 'json',
            contentType: 'application/json',
            data: JSON.stringify(json),
            success: function (data) {
                console.log(data);

                orderRef = data.orderRef;
                waitForCompletion(orderRef);

                if (isAutomaticStart) {
                    launchApp(data.autoStartToken);
                }
            },
            error: function (data) {
                console.log(data);
                $("#spinner").hide();
                $("#status").text(data.responseText);
            }
        });
    }

    function waitForCompletion(orderRef) {
        var isSending = false;

        statusLoop = setInterval(function () {
            if (isSending) {
                return; // we avoid current iteration call so we don't overlap calls, since this can cause issues
            }

            $.ajax({
                url: '/api/bankid/collect',
                method: 'GET',
                dataType: 'json',
                contentType: 'application/json',
                data: {
                    orderRef: orderRef,
                    isAutomaticStart: isAutomaticStart,
                    isQrCodeUsed: false
                },
                beforeSend: function () {
                    isSending = true;
                },
                success: function (data) {
                    console.log(data);
                    $("#status").text(data.userMessage);

                    if (data.status === "Complete") {
                        $("#status").text("Authorized user: " + data.collectResponse.completionData.user.name);
                    }

                    if (data.status !== "Pending") {
                        clearInterval(statusLoop);
                        $("#spinner").hide();
                        resetOrderRefVariable();
                    }
                    isSending = false;
                },
                error: function (data) {
                    console.log(data);
                    clearInterval(statusLoop);
                    $("#status").text(data.responseText);
                    $("#spinner").hide();

                    resetOrderRefVariable();
                    isSending = false;
                }
            });
        }, 1000);
    }

    function launchApp(autoStartToken) {
        if (autoStartToken == null) {
            return;
        }

        if (isApple()) {
            var url = window.location.href;

            window.location = "bankid:///?autostarttoken=" + autoStartToken + "&redirect=" + url;
        }
        else {
            window.location = "bankid:///?autostarttoken=" + autoStartToken + "&redirect=null";
        }
    }

    function reset() {
        if (statusLoop !== null) { // end loop
            clearInterval(statusLoop);
        }

        if (orderRef !== null) { // end BankId authentication attempt
            $.ajax({
                url: '/api/bankid/cancel?orderRef=' + orderRef,
                method: 'POST',
                dataType: 'json',
                contentType: 'application/json',
                beforeSend: function () {
                    resetOrderRefVariable();
                },
                success: function (data) {
                    console.log(data);
                },
                error: function (data) {
                    console.log(data);
                }
            });
        }

        isAutomaticStart = false;
        $("#authenticationForm").show();
        $("#authenticationInfo").hide();
        $("#status").text(isAutomaticStart ? "Vänligen vänta..." : "Starta BankID-appen");
    }

    function resetOrderRefVariable() {
        orderRef = null;
    }

    function isMobile() {
        return /Mobi|Android/i.test(navigator.userAgent); // https://stackoverflow.com/a/24600597
    }

    function isApple() {
        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream; // https://stackoverflow.com/a/9039885
    }

    $("#authenticationForm").submit(function (e) {
        e.preventDefault(); // disable page refresh

        if ($('#authenticationForm').valid()) {
            authenticate();
        }
    });
</script>

<style>
    #spinner {
        width: 3rem;
        height: 3rem;
        margin-bottom: 10px;
    }
</style>